---
title: "Fish Traps and Food Security"
author: "Bryan P. Galligan, S.J."
date: "1/10/2023"
image: 2023-01-10-fishtrapsfoodsec.jpg
bibliography: blog-data-files/references.bib
csl: blog-data-files/apa.csl
---

![](2023-01-10-fishtrapsfoodsec.jpg)

East Africa's coral reef fisheries are threatened by climate change, overexploitation, and poor management. And in this part of the world, where artisanal fisheries are a key source of food and income for coastal communities, these threats have direct impacts on food security. One way to make these fisheries more sustainable is to target larger, sexually mature fishes, and let juvenile fish grow to reproduce at least once before they are removed from the ecosystem. This is what managers, researchers, and communities have been doing for years by modifying traditional African fish traps with an escape gap for undersize fish ("gated traps").

Previous work on these gated traps has found that they improve the sustainability and quantity of the fish caught while also increasing fishers' incomes. They are also more sustainable than some other gears used in artisanal reef fisheries, such as beach seines and gillnets. Our latest paper [@galligan2022] is the most comprehensive evaluation of these new traps to date. We developed a suite of indicators to compare how gated traps affect the ecological function of coral reefs and the food security of coastal communities.

A key concern was that the catch from gated traps might be of a lower nutritional quality than the catch from traditional traps. Although targeting larger individuals and species (as gated traps do) is generally considered to be more sustainable and to produce more total fish, it could also lead to unintended consequences if smaller fish species are more nutrient dense than larger ones (@fig-calcium). We were also interested in whether gated traps target species with different ecological functions than traditional traps.

```{r}
#| echo: false
#| output: false

# Load packages
library(readr)
library(ggplot2)
library(dplyr)
library(mgcv)
library(tidymv)

# Load data
trap.species <- read_csv("blog-data-files/SpeciesData_GatedTraps.csv")

trap <- read_csv("blog-data-files/TripData_GatedTraps.csv")
trap <- filter(trap, TrapType != "Multiple")

```

```{r}
#| label: fig-calcium
#| fig-cap: In Kenya's artisanal trap fishery, smaller species are richer in calcium than larger ones.
#| warning: false
#| code-fold: true

# Plot concentration against species size
ggplot(trap.species, aes(x = Lmat_cm, y = Calcium_mgPer100g)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "lm") +
  coord_cartesian(xlim = c(0, 100), ylim = c(0, 250)) +
  labs(title = "Calcium Concentrations by Size",
    x = expression(paste("Length at Maturity (", L[mat], ") (cm)", sep = "")),
    y = expression(
      paste("Calcium Concentration ",
        bgroup("(", frac('mg', '100g'), ")"),
        sep = ""))) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme(panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.background = element_blank(),
    axis.line = element_line(colour = "black"),
    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))


```

Our indicators showed that gated traps perform better than traditional traps for food security, but had mixed results for ecological function. There is really no way to remove fish from coral reefs without affecting ecosystem functioning, and gated traps seem to impact the reef differently from traditional traps, but not better or worse.

While some small species tended to be more nutrient dense than larger ones, this is not a universal trend. As a result, there were no pronounced tradeoffs between food security and ecological function. Instead, we found that length-based estimates of maximum sustainable yield (MSY) frequently correlated with more nutritious catches in gated traps (@fig-nutrientyields).

:::{.panel-tabset}

## Calcium
```{r}
#| label: fig-nutrientyields
#| fig-cap: Calcium yields are low but peak near MSY in gated traps.
#| warning: false
#| code-fold: true

# GAMM for calcium yield - traditional traps
ca.gamm.trad <- gamm(CaPUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Traditional", ])

# GAMM for calcium yield - gated traps
ca.gamm.gated <- gamm(CaPUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Gated", ])

# Generate model predictions
ca.predict.trad <- predict_gam(ca.gamm.trad$gam)
ca.predict.gated <- predict_gam(ca.gamm.gated$gam)

# Plot data and model predictions with daily value (RDA for children 1-3 years)
ggplot(data = trap, mapping = aes(x = MeanLLopt, y = CaPUE)) +
  geom_point(alpha = 0.1, aes(color = TrapType)) +
  scale_color_manual(values = c("yellow", "green")) +
  geom_line(data = ca.predict.trad,
    aes(x = MeanLLopt, y = fit), color = "green", size = 1) +
  geom_ribbon(data = ca.predict.trad,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_line(data = ca.predict.gated,
    aes(x = MeanLLopt, y = fit), color = "yellow", size = 1) +
  geom_ribbon(data = ca.predict.gated,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_hline(yintercept = 700, linetype = 2) +
  xlab(expression(paste("Length : Optimum Length ", bgroup("(", frac(L, L[opt]), ")")))) +
  ylab(expression(paste("Calcium Yield ", bgroup("(", frac(mg, trap), ")")))) +
  labs(color = "Trap Type", title = "Calcium Yield by Trap Type") +
  guides(colour = guide_legend(override.aes = list(alpha = 1))) +
  coord_cartesian(xlim = c(0, 1.5), ylim = c(0, 1000)) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
    panel.background = element_blank(),
    legend.key = element_rect(fill = "white"),
    axis.line = element_line(colour = "black"),
    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))


```

## Iron

```{r}
#| label: fig-iron
#| fig-cap: Iron yields peak near MSY in gated traps.
#| warning: false
#| code-fold: true

# GAMM for iron yield - traditional traps
fe.gamm.trad <- gamm(FePUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Traditional", ])

# GAMM for iron yield - gated traps
fe.gamm.gated <- gamm(FePUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Gated", ])

# Generate model predictions
fe.predict.trad <- predict_gam(fe.gamm.trad$gam)
fe.predict.gated <- predict_gam(fe.gamm.gated$gam)

# Plot data and model predictions with daily value (RDA for children 1-3 years)
ggplot(data = trap, mapping = aes(x = MeanLLopt, y = FePUE)) +
  geom_point(alpha = 0.1, aes(color = TrapType)) +
  scale_color_manual(values = c("yellow", "green")) +
  geom_line(data = fe.predict.trad,
    aes(x = MeanLLopt, y = fit), color = "green", size = 1) +
  geom_ribbon(data = fe.predict.trad,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_line(data = fe.predict.gated,
    aes(x = MeanLLopt, y = fit), color = "yellow", size = 1) +
  geom_ribbon(data = fe.predict.gated,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_hline(yintercept = 7, linetype = 2) +
  xlab(expression(paste("Length : Optimum Length ", bgroup("(", frac(L, L[opt]), ")")))) +
  ylab(expression(paste("Iron Yield ", bgroup("(", frac(mg, trap), ")")))) +
  labs(color = "Trap Type", title = "Iron Yield by Trap Type") +
  guides(colour = guide_legend(override.aes = list(alpha = 1))) +
  coord_cartesian(xlim = c(0, 1.5), ylim = c(0, 20)) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
    panel.background = element_blank(),
    legend.key = element_rect(fill = "white"),
    axis.line = element_line(colour = "black"),
    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

```

## Omega-3

```{r}
#| fig-cap: Omega-3 yields are high and peak near length-based MSY in gated traps.
#| label: fig-omega
#| warning: false
#| code-fold: true

# GAMM for Omega-3 yield - traditional traps
pufa.gamm.trad <- gamm(Omega3PUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Traditional", ])

# GAMM for calcium yield - gated traps
pufa.gamm.gated <- gamm(Omega3PUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Gated", ])

# Generate model predictions
pufa.predict.trad <- predict_gam(pufa.gamm.trad$gam)
pufa.predict.gated <- predict_gam(pufa.gamm.gated$gam)

# Plot data and model predictions with daily value (adequate intake for children 1-3 years)
ggplot(data = trap, mapping = aes(x = MeanLLopt, y = Omega3PUE)) +
  geom_point(alpha = 0.1, aes(color = TrapType)) +
  scale_color_manual(values = c("yellow", "green")) +
  geom_line(data = pufa.predict.trad,
    aes(x = MeanLLopt, y = fit), color = "green", size = 1) +
  geom_ribbon(data = pufa.predict.trad,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_line(data = pufa.predict.gated,
    aes(x = MeanLLopt, y = fit), color = "yellow", size = 1) +
  geom_ribbon(data = pufa.predict.gated,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_hline(yintercept = 0.7, linetype = 2) +
  xlab(expression(paste("Length : Optimum Length ", bgroup("(", frac(L, L[opt]), ")")))) +
  ylab(expression(paste("Omega-3 Yield ", bgroup("(", frac(g, trap), ")")))) +
  labs(color = "Trap Type", title = "Omega-3 Yield by Trap Type") +
  guides(colour = guide_legend(override.aes = list(alpha = 1))) +
  coord_cartesian(xlim = c(0, 1.5), ylim = c(0, 5)) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
    panel.background = element_blank(),
    legend.key = element_rect(fill = "white"),
    axis.line = element_line(colour = "black"),
    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))



```

## Vitamin A

```{r}
#| fig-cap: Vitamin A yields are high at and below MSY.
#| label: fig-vitamina
#| warning: false
#| code-fold: true

# Plot omega-3 yields with daily value (RDA for children 1-3 years)

# GAMM for vitamin A yield - traditional traps
va.gamm.trad <- gamm(VAPUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Traditional", ])

# GAMM for vitamin A yield - gated traps
va.gamm.gated <- gamm(VAPUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Gated", ])

# Generate model predictions
va.predict.trad <- predict_gam(va.gamm.trad$gam)
va.predict.gated <- predict_gam(va.gamm.gated$gam)

# Plot data and model predictions with daily value (RDA for children 1-3 years)
ggplot(data = trap, mapping = aes(x = MeanLLopt, y = VAPUE)) +
  geom_point(alpha = 0.1, aes(color = TrapType)) +
  scale_color_manual(values = c("yellow", "green")) +
  geom_line(data = va.predict.trad,
    aes(x = MeanLLopt, y = fit), color = "green", size = 1) +
  geom_ribbon(data = va.predict.trad,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_line(data = va.predict.gated,
    aes(x = MeanLLopt, y = fit), color = "yellow", size = 1) +
  geom_ribbon(data = va.predict.gated,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_hline(yintercept = 300, linetype = 2) +
  xlab(expression(paste("Length : Optimum Length ", bgroup("(", frac(L, L[opt]), ")")))) +
  ylab(expression(paste("Vitamin A Yield ", bgroup("(", frac(paste("\u00b5", g, sep = ""), trap), ")")))) +
  labs(color = "Trap Type", title = "Vitamin A Yield by Trap Type") +
  guides(colour = guide_legend(override.aes = list(alpha = 1))) +
  coord_cartesian(xlim = c(0, 1.5), ylim = c(0, 2500)) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
    panel.background = element_blank(),
    legend.key = element_rect(fill = "white"),
    axis.line = element_line(colour = "black"),
    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

```

## Selenium

```{r}
#| fig-cap: Selenium yields are high from both trap types and they peak below MSY in gated traps.
#| label: fig-se
#| warning: false
#| code-fold: true

# GAMM for slenium yield - traditional traps
se.gamm.trad <- gamm(SePUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Traditional", ])

# GAMM for calcium yield - gated traps
se.gamm.gated <- gamm(SePUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Gated", ])

# Generate model predictions
se.predict.trad <- predict_gam(se.gamm.trad$gam)
se.predict.gated <- predict_gam(se.gamm.gated$gam)

# Plot data and model predictions with daily value (RDA for children 1-3 years)
ggplot(data = trap, mapping = aes(x = MeanLLopt, y = SePUE)) +
  geom_point(alpha = 0.1, aes(color = TrapType)) +
  scale_color_manual(values = c("yellow", "green")) +
  geom_line(data = se.predict.trad,
    aes(x = MeanLLopt, y = fit), color = "green", size = 1) +
  geom_ribbon(data = se.predict.trad,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_line(data = se.predict.gated,
    aes(x = MeanLLopt, y = fit), color = "yellow", size = 1) +
  geom_ribbon(data = se.predict.gated,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_hline(yintercept = 20, linetype = 2) +
  xlab(expression(paste("Length : Optimum Length ", bgroup("(", frac(L, L[opt]), ")")))) +
  ylab(expression(paste("Selenium Yield ", bgroup("(", frac(paste("\u00b5", g, sep = ""), trap), ")")))) +
  labs(color = "Trap Type", title = "Selenium Yield by Trap Type") +
  guides(colour = guide_legend(override.aes = list(alpha = 1))) +
  coord_cartesian(xlim = c(0, 1.5), ylim = c(0, 1000)) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
    panel.background = element_blank(),
    legend.key = element_rect(fill = "white"),
    axis.line = element_line(colour = "black"),
    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
```

## Zinc

```{r}
#| fig-cap: Zinc yields are high at and below MSY in gated traps.
#| label: fig-zn
#| warning: false
#| code-fold: true

# GAMM for zinc yield - traditional traps
zn.gamm.trad <- gamm(ZnPUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Traditional", ])

# GAMM for zinc yield - gated traps
zn.gamm.gated <- gamm(ZnPUE ~ s(MeanLLopt),
  random = list(Site = ~1),
  data = trap[trap$TrapType == "Gated", ])

# Generate model predictions
zn.predict.trad <- predict_gam(zn.gamm.trad$gam)
zn.predict.gated <- predict_gam(zn.gamm.gated$gam)

# Plot data and model predictions with daily value (RDA for children 1-3 years)
ggplot(data = trap, mapping = aes(x = MeanLLopt, y = ZnPUE)) +
  geom_point(alpha = 0.1, aes(color = TrapType)) +
  scale_color_manual(values = c("yellow", "green")) +
  geom_line(data = zn.predict.trad,
    aes(x = MeanLLopt, y = fit), color = "green", size = 1) +
  geom_ribbon(data = zn.predict.trad,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_line(data = zn.predict.gated,
    aes(x = MeanLLopt, y = fit), color = "yellow", size = 1) +
  geom_ribbon(data = zn.predict.gated,
    aes(x = MeanLLopt, ymin = (fit - se.fit), ymax = (fit + se.fit)),
    alpha = 0.2, linetype = 0,
    inherit.aes = FALSE) +
  geom_hline(yintercept = 3, linetype = 2) +
  xlab(expression(paste("Length : Optimum Length ", bgroup("(", frac(L, L[opt]), ")")))) +
  ylab(expression(paste("Zinc Yield ", bgroup("(", frac(mg, trap), ")")))) +
  labs(color = "Trap Type", title = "Zinc Yield by Trap Type") +
  guides(colour = guide_legend(override.aes = list(alpha = 1))) +
  coord_cartesian(xlim = c(0, 1.5), ylim = c(0, 60)) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
    panel.background = element_blank(),
    legend.key = element_rect(fill = "white"),
    axis.line = element_line(colour = "black"),
    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))


```

:::




*Photo: Wildlife Conservation Society (WCS)*


